# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '441425f3-3b81-42e1-81a9-d3a0d4eccef9'
  imageRepository: 'kwettertweetservice'
  containerRegistry: 'kwetterregistry.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(Build.BuildId)'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Setup
  displayName: Setup and prepare sonar cloud 
  jobs:
  - job: Setup
    displayName: Setup
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: DotNetCoreCLI@2
      inputs:
        command: 'restore'
        feedsToUse: 'select'
    - task: SonarCloudPrepare@1
      inputs:
        SonarCloud: 'SonarcloudTweets'
        organization: 'kwetter-fontys'
        scannerMode: 'MSBuild'
        projectKey: 'Kwetter-Fontys_kwetter-tweet-service'
        projectName: 'Kwetter tweet service'

- stage: Build
  displayName: Build and test project
  jobs:
  - job: Build
    displayName: Build and test
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: DotNetCoreCLI@2
      inputs:
        command: 'build'
        projects: '**/*.csproj'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '**/*.csproj'
        arguments: '--configuration ($BuildConfiguration) --collect "Code Coverage" --logger trx --results-directory $(System.DefaultWorkingDirectory\TestResults'
        testRunTitle: 'Alll tests'

- stage: Analyse
  displayName: Analyse and publish to sonarcloud
  jobs:
  - job: Analyse
    displayName: Analyse and publish
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: SonarCloudAnalyze@1
    - task: SonarCloudPublish@1
      inputs:
        pollingTimeoutSec: '300'

- stage: Docker
  displayName: Push to docker hub
  jobs:
  - job: Docker
    displayName: Push to docker hub
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      inputs:
        containerRegistry: 'DockerHub'
        repository: 'sebananas/tweetservice'
        command: 'buildAndPush'
        Dockerfile: '**/Dockerfile'
        tags: |
          latest