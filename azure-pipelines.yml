# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '441425f3-3b81-42e1-81a9-d3a0d4eccef9'
  imageRepository: 'kwettertweetservice'
  containerRegistry: 'kwetterregistry.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(Build.BuildId)'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Main
  displayName: Setup build analyse and deploy
  pool:
    vmImage: windows-latest  
  jobs:
  - job: Setup
    displayName: Setup build analyse and deploy
    steps:

    - task: DotNetCoreCLI@2
      inputs:
        command: 'restore'
        feedsToUse: 'select'

    - task: SonarCloudPrepare@1
      inputs:
        SonarCloud: 'SonarcloudTweets'
        organization: 'kwetter-fontys'
        scannerMode: 'MSBuild'
        projectKey: 'Kwetter-Fontys_kwetter-tweet-service'
        projectName: 'Kwetter tweet service'

    - task: DotNetCoreCLI@2
      inputs:
        command: 'build'
        projects: '**/*.csproj'

    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '**/*.csproj'
        arguments: '--collect "Code Coverage"'
        testRunTitle: 'Alll tests'

    - task: dependency-check-build-task@6
      inputs:
        projectName: 'kwetter-tweet-service'
        scanPath: '**/*.csproj'
        format: 'JUNIT'
        failOnCVSS: '8'
    - task: PublishTestResults@2
      inputs:
        testResultsFormat: 'JUnit'
        testResultsFiles: 'dependency-check\*.junit.xml'
        searchFolder: '$(Common.TestResultsDirectory)'
        failTaskOnFailedTests: true
        testRunTitle: 'Dependency check'
    - task: SonarCloudAnalyze@1

    - task: SonarCloudPublish@1
      inputs:
        pollingTimeoutSec: '300'


- stage: Deploy
  pool:
    vmImage: $(vmImageName)
  jobs:
  - job: Deploy
    displayName: Deploy to docker
    steps:
    - task: Docker@2
      inputs:
        containerRegistry: 'DockerHub'
        repository: 'sebananas/tweetservice'
        command: 'buildAndPush'
        Dockerfile: '**/Dockerfile'
        tags: |
          latest